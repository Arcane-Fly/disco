{
  "name": "disco-mcp-ultimate",
  "description": "Multi-platform MCP Server with enhanced UI/UX, improved performance, and universal integration for ChatGPT, Claude, VS Code, Cursor, Warp Terminal, and over 15 AI platforms.",
  "version": "2.0.0",
  "server_url": "https://disco-mcp.up.railway.app",
  "protocol_version": "2024-11-05",
  "capabilities": {
    "tools": true,
    "resources": true,
    "prompts": true,
    "webcontainer": true,
    "logging": true,
    "sampling": true,
    "roots": true,
    "elicitation": true,
    "completions": true,
    "experimental": {
      "real_time_collaboration": true,
      "visual_interface": true,
      "ai_assistance": true,
      "performance_monitoring": true
    }
  },
  "endpoints": {
    "health": "/health",
    "mcp_http_stream": "/mcp",
    "mcp_legacy_sse": "/sse",
    "mcp_legacy_messages": "/messages",
    "containers": "/api/v1/containers",
    "sessions": "/api/v1/containers/sessions",
    "bootstrap": "/api/v1/containers/bootstrap",
    "auth": "/api/v1/auth/github",
    "openapi": "/openapi.json",
    "docs": "/docs",
    "dashboard": "/dashboard",
    "ui": "/ui",
    "sdk": "/sdk",
    "metrics": "/metrics",
    "connectors": {
      "chatgpt": "/chatgpt-connector",
      "claude": "/claude-connector", 
      "vscode": "/vscode-connector",
      "cursor": "/cursor-connector",
      "warp": "/warp-connector",
      "jetbrains": "/jetbrains-connector",
      "zed": "/zed-connector"
    }
  },
  "authentication": {
    "type": "oauth2",
    "authorization_url": "https://disco-mcp.up.railway.app/oauth/authorize",
    "token_url": "https://disco-mcp.up.railway.app/oauth/token",
    "redirect_uris": [
      "https://chat.openai.com/oauth/callback",
      "https://chatgpt.com/oauth/callback"
    ],
    "scopes": ["mcp:tools", "mcp:resources", "mcp:prompts"],
    "pkce_required": true,
    "client_id": "chatgpt-connector",
    "alternative_auth": {
      "github_oauth": "https://disco-mcp.up.railway.app/api/v1/auth/github",
      "api_key": "https://disco-mcp.up.railway.app/api/v1/auth/api-key",
      "bearer_token": "https://disco-mcp.up.railway.app/api/v1/auth/bearer"
    }
  },
  "transports": [
    {
      "type": "http-stream", 
      "url": "https://disco-mcp.up.railway.app/mcp",
      "methods": ["POST", "GET"],
      "description": "Primary MCP HTTP Stream transport - POST for JSON-RPC, GET for SSE",
      "headers": {
        "accept": ["application/json", "text/event-stream"],
        "content-type": ["application/json"]
      }
    },
    {
      "type": "stdio",
      "executable": "npx",
      "args": ["disco-mcp-server"],
      "description": "Local STDIO transport for CLI and IDE integrations"
    },
    {
      "type": "sse",
      "sse_endpoint": "https://disco-mcp.up.railway.app/sse",
      "messages_endpoint": "https://disco-mcp.up.railway.app/messages", 
      "description": "Legacy SSE transport for backward compatibility"
    },
    {
      "type": "websocket",
      "url": "wss://disco-mcp.up.railway.app/ws",
      "description": "Real-time WebSocket transport for collaborative features"
    }
  ],
  "tools": [
    {
      "name": "file_read",
      "description": "Read file contents from WebContainer with intelligent encoding detection",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {"type": "string", "description": "File path to read"},
          "encoding": {"type": "string", "enum": ["utf8", "base64", "binary"], "default": "utf8"}
        },
        "required": ["path"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "content": {"type": "string"},
          "encoding": {"type": "string"},
          "size": {"type": "number"},
          "mimeType": {"type": "string"}
        }
      }
    },
    {
      "name": "file_write", 
      "description": "Write content to file in WebContainer with atomic operations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {"type": "string", "description": "File path to write"},
          "content": {"type": "string", "description": "Content to write"},
          "encoding": {"type": "string", "enum": ["utf8", "base64"], "default": "utf8"},
          "createDirs": {"type": "boolean", "default": true}
        },
        "required": ["path", "content"]
      }
    },
    {
      "name": "file_search",
      "description": "Search for files and content with advanced filtering",
      "inputSchema": {
        "type": "object", 
        "properties": {
          "query": {"type": "string", "description": "Search query"},
          "path": {"type": "string", "description": "Base search path", "default": "/"},
          "fileType": {"type": "string", "description": "File extension filter"},
          "includeContent": {"type": "boolean", "default": false}
        },
        "required": ["query"]
      }
    },
    {
      "name": "terminal_execute",
      "description": "Execute command in WebContainer terminal with streaming output",
      "inputSchema": {
        "type": "object",
        "properties": {
          "command": {"type": "string", "description": "Command to execute"},
          "workingDir": {"type": "string", "description": "Working directory"},
          "timeout": {"type": "number", "default": 30000},
          "stream": {"type": "boolean", "default": true}
        },
        "required": ["command"]
      }
    },
    {
      "name": "git_clone",
      "description": "Clone repository in WebContainer with authentication support",
      "inputSchema": {
        "type": "object",
        "properties": {
          "url": {"type": "string", "description": "Repository URL"},
          "path": {"type": "string", "description": "Target path"},
          "branch": {"type": "string", "description": "Specific branch to clone"},
          "depth": {"type": "number", "description": "Clone depth for shallow clones"}
        },
        "required": ["url"]
      }
    },
    {
      "name": "git_commit",
      "description": "Create Git commit with files and message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "message": {"type": "string", "description": "Commit message"},
          "files": {"type": "array", "items": {"type": "string"}, "description": "Files to commit"},
          "author": {"type": "object", "properties": {"name": {"type": "string"}, "email": {"type": "string"}}}
        },
        "required": ["message"]
      }
    },
    {
      "name": "computer_use_screenshot",
      "description": "Take screenshot using browser automation with element targeting",
      "inputSchema": {
        "type": "object",
        "properties": {
          "url": {"type": "string", "description": "URL to screenshot"},
          "element": {"type": "string", "description": "CSS selector for specific element"},
          "viewport": {"type": "object", "properties": {"width": {"type": "number"}, "height": {"type": "number"}}},
          "fullPage": {"type": "boolean", "default": false}
        }
      }
    },
    {
      "name": "computer_use_click",
      "description": "Perform click action on web page elements",
      "inputSchema": {
        "type": "object",
        "properties": {
          "url": {"type": "string", "description": "Target page URL"},
          "selector": {"type": "string", "description": "CSS selector for element to click"},
          "coordinates": {"type": "object", "properties": {"x": {"type": "number"}, "y": {"type": "number"}}}
        }
      }
    },
    {
      "name": "ai_complete",
      "description": "Request AI completion from connected language models",
      "inputSchema": {
        "type": "object",
        "properties": {
          "prompt": {"type": "string", "description": "Completion prompt"},
          "maxTokens": {"type": "number", "default": 1000},
          "temperature": {"type": "number", "default": 0.7},
          "model": {"type": "string", "description": "Preferred model"}
        },
        "required": ["prompt"]
      }
    },
    {
      "name": "code_analyze",
      "description": "Analyze code structure, dependencies, and quality metrics",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {"type": "string", "description": "Code file or directory path"},
          "language": {"type": "string", "description": "Programming language"},
          "includeMetrics": {"type": "boolean", "default": true},
          "includeDependencies": {"type": "boolean", "default": true}
        },
        "required": ["path"]
      }
    }
  ],
  "webcontainer": {
    "supported": true,
    "client_side": true,
    "requires_coep": true,
    "bootstrap_endpoint": "/api/v1/containers/bootstrap",
    "initialization_script": "/webcontainer-loader.html"
  },
  "cors": {
    "allowed_origins": [
      "https://chat.openai.com",
      "https://chatgpt.com", 
      "https://claude.ai",
      "https://console.anthropic.com",
      "https://webcontainer.io",
      "vscode://ms-vscode.copilot",
      "cursor://",
      "warp://",
      "jetbrains://",
      "zed://",
      "http://localhost:*",
      "https://localhost:*"
    ],
    "exposed_headers": ["Mcp-Session-Id", "X-MCP-Version", "X-Performance-Metrics"]
  },
  "platform_integration": {
    "chatgpt": {
      "connector_url": "https://disco-mcp.up.railway.app/openapi.json",
      "setup_guide": "/chatgpt-connector",
      "authentication": "oauth2",
      "transport": "http-stream",
      "features": ["tools", "resources", "completions"]
    },
    "claude": {
      "api_base_url": "https://disco-mcp.up.railway.app/mcp",
      "setup_guide": "/claude-connector",
      "authentication": "bearer",
      "transport": "http-stream",
      "features": ["tools", "resources", "prompts", "sampling"]
    },
    "vscode": {
      "extension_id": "disco-mcp.vscode-extension",
      "stdio_command": "npx disco-mcp-server",
      "setup_guide": "/vscode-connector",
      "transport": "stdio",
      "features": ["tools", "resources", "logging"]
    },
    "cursor": {
      "composer_integration": true,
      "api_base_url": "https://disco-mcp.up.railway.app/mcp",
      "setup_guide": "/cursor-connector", 
      "transport": ["stdio", "sse"],
      "features": ["tools", "resources", "completions"]
    },
    "warp": {
      "agent_mode": true,
      "cli_integration": true,
      "setup_guide": "/warp-connector",
      "transport": ["stdio", "sse"],
      "features": ["tools", "terminal", "natural_language"]
    },
    "jetbrains": {
      "plugin_id": "com.disco.mcp.jetbrains",
      "setup_guide": "/jetbrains-connector",
      "transport": "stdio",
      "features": ["tools", "resources", "code_assistance"]
    },
    "zed": {
      "slash_commands": true,
      "setup_guide": "/zed-connector",
      "transport": "stdio", 
      "features": ["prompts", "tools", "editor_integration"]
    }
  },
  "webcontainer": {
    "supported": true,
    "client_side": true,
    "requires_coep": true,
    "bootstrap_endpoint": "/api/v1/containers/bootstrap",
    "initialization_script": "/webcontainer-loader.html",
    "performance_optimizations": {
      "lazy_loading": true,
      "resource_pooling": true,
      "automatic_cleanup": true,
      "memory_management": true
    }
  },
  "performance": {
    "response_time_target": "< 100ms",
    "uptime_guarantee": "99.9%",
    "rate_limits": {
      "requests_per_minute": 1000,
      "concurrent_connections": 100,
      "burst_allowance": 200
    },
    "monitoring": {
      "metrics_endpoint": "/metrics",
      "health_checks": ["/health", "/health/ready", "/health/live"],
      "performance_tracking": true,
      "error_reporting": true
    }
  },
  "quality": {
    "test_coverage": "> 95%",
    "accessibility": "WCAG 2.1 AA",
    "security": ["OAuth 2.1", "PKCE", "CORS", "Rate Limiting", "Input Validation"],
    "documentation": {
      "api_docs": "/docs",
      "interactive_examples": "/examples",
      "sdk_docs": "/sdk",
      "setup_guides": "/guides"
    }
  },
  "deployment": {
    "environment": "production",
    "railway_service_id": "b8ea9420-d160-4ea2-b612-821f1868d33a",
    "domain": "disco-mcp.up.railway.app",
    "health_check": "https://disco-mcp.up.railway.app/health",
    "cdn": {
      "static_assets": "https://cdn.disco-mcp.up.railway.app",
      "performance_optimization": true,
      "global_distribution": true
    },
    "scaling": {
      "auto_scaling": true,
      "load_balancing": true,
      "multi_region": false,
      "backup_regions": ["us-west-2", "eu-west-1"]
    }
  },
  "developer_experience": {
    "sdk_languages": ["TypeScript", "Python", "JavaScript", "Java", "C#", "Go", "Rust"],
    "cli_tools": {
      "installation": "npm install -g disco-mcp-cli",
      "commands": ["disco-mcp init", "disco-mcp deploy", "disco-mcp test", "disco-mcp debug"]
    },
    "testing": {
      "unit_tests": true,
      "integration_tests": true,
      "end_to_end_tests": true,
      "performance_tests": true,
      "visual_regression_tests": true
    }
  }
}